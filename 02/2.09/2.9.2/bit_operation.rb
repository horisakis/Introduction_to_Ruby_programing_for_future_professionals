# ビット反転
(~0b1111).to_s(2)
# ビット積
(0b1010 & 0b1100).to_s(2)
# ビット和
(0b1010 | 0b1100).to_s(2)
# 排他的論理和
(0b1010 ^ 0b1100).to_s(2)
# 右ビットシフト
(0b1010 >> 1).to_s(2)
# 左ビットシフト
(0b1010 << 1).to_s(2)
